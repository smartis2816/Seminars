# Задание №1
# ✔ Вручную создайте список с целыми числами, которые
# повторяются. Получите новый список, который содержит
# уникальные (без повтора) элементы исходного списка.
# ✔ *Подготовьте два решения, короткое и длинное, которое
# не использует другие коллекции помимо списков.

# my_list = [2, 3, 2, 6, 4, 3, 9, 7, 5]
# my_list_2 = list(set(my_list))
# print(my_list_2)
#
#
# new_list = [2, 3, 2, 6, 4, 3, 9, 7, 5]
# new_list_2 = []
#
#
# for item in new_list:
#     if item not in new_list_2:
#         new_list_2.append(item)
#
# print(new_list_2)


# Задание №2
# Пользователь вводит данные. Сделайте проверку данных
# и преобразуйте если возможно в один из вариантов ниже:
# ✔ Целое положительное число
# ✔ Вещественное положительное или отрицательное число
# ✔ Строку в нижнем регистре, если в строке есть
# хотя бы одна заглавная буква
# ✔ Строку в нижнем регистре в остальных случаях

# def reformat(text: str):
#     result = None
#     if ('.' in text or text[0] == '-') and \
#             text.replace('.', '').replace('-', '').isdigit():
#         result = float(text)
#     elif text.isdigit():
#         result = int(text)
#     elif text.lower() != text:
#         result = text.lower()
#     else:
#         result = text.upper()
#     return result
# #
# #
# print(reformat('12'))
# print(reformat('11.55'))
# print(reformat('-25'))
# print(reformat('ТеКст'))
# print(reformat('текст'))

# Задание №3
# ✔ Создайте вручную кортеж содержащий элементы разных типов.
# ✔ Получите из него словарь списков, где:
# ключ — тип элемента,
# значение — список элементов данного типа.

# my_tuple = (5, 'text', 1.3, 'string', True, 23, False)
# my_dict = {}
# for item in my_tuple:
#     my_dict.setdefault(type(item), []).append(item)
#
# print(my_dict)

# Задание №4
# ✔ Создайте вручную список с повторяющимися элементами.
# ✔ Удалите из него все элементы, которые встречаются дважды.

# my_list = [2, 3, 2, 6, 4, 3, 9, 7, 5]
# new_list = list(filter(lambda x: my_list.count(x) != 2, my_list))
#
# print(my_list)
# print(new_list)


# Задание №5
# ✔ Создайте вручную список с повторяющимися целыми числами.
# ✔ Сформируйте список с порядковыми номерами
# нечётных элементов исходного списка.
# ✔ Нумерация начинается с единицы.

# my_list = [2, 3, 2, 6, 4, 3, 9, 7, 5]
# new_list = [i for i, j in filter(lambda x: x[1] % 2 != 0, enumerate(my_list, 1))]
# print(new_list)

# Задание №6
# Пользователь вводит строку текста. Вывести каждое слово с новой строки.
# ✔ Строки нумеруются начиная с единицы.
# ✔ Слова выводятся отсортированными согласно кодировки Unicode.
# ✔ Текст выравнивается по правому краю так, чтобы у самого длинного
# слова был один пробел между ним и номером строки.

# text = 'Текст выравнивается по правому краю так, чтобы у самого длинного слова был один пробел между ним и номером строки.'
# result = sorted(text.split())
# [print(f'{i} - {word:>{len(max(result, key=len))}}') for i, word in enumerate(result, 1)]



